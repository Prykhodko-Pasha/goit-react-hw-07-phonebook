{"version":3,"sources":["components/Section/Section.module.css","components/Form/Form.module.css","components/Loader/Loader.module.css","components/Section/Section.js","redux/actions.js","services/contacts-api.js","redux/operations.js","redux/selectors.js","components/Form/Form.js","components/ContactsItem/ContactsItem.js","components/Contacts/Contacts.js","components/ContactsSearch/ContactsSearch.js","components/Loader/Loader.js","components/App.js","redux/reducer.js","redux/store.js","index.js","components/Contacts/Contacts.module.css"],"names":["module","exports","Section","title","children","className","s","section","section__title","changeFilter","createAction","fetchContacts","addContact","delContact","fetchContactsAPI","a","axios","get","data","addContactAPI","name","phone","newContact","post","delContactAPI","contactId","delete","defaults","baseURL","createAsyncThunk","actions","contacts","contact","console","log","id","getEntities","state","entities","getFilter","filter","getLoading","isLoading","getVisibleContacts","createSelector","items","item","toLowerCase","includes","Form","useState","setName","setPhone","useSelector","dispatch","useDispatch","onChange","e","currentTarget","value","reset","form","onSubmit","preventDefault","length","operations","alert","type","placeholder","pattern","required","form__btn","ContactsItem","del__btn","onClick","Contacts","contacts__list","map","contacts__item","ContactsSearch","wrapper","event","target","Loader","lds_wrapper","lds_default","Phonebook","useEffect","text","createReducer","fulfilled","_","action","payload","pending","rejected","error","combineReducers","store","configureStore","reducer","contactsReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31b3ef8f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__MKWlW\",\"section__title\":\"Section_section__title__qm4ZY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1mCBA\",\"form__btn\":\"Form_form__btn__3I_SY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds_wrapper\":\"Loader_lds_wrapper__3XSeh\",\"lds_default\":\"Loader_lds_default__132F7\"};","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <div className={s.section}>\r\n      <h2 className={s.section__title}>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const changeFilter = createAction('Phonebook/changeFilter');\r\nexport const fetchContacts = createAction('Phonebook/fetchContacts');\r\nexport const addContact = createAction('Phonebook/addContact');\r\nexport const delContact = createAction('Phonebook/delContact');\r\n\r\n// export const fetchContactsRequest = createAction(\r\n//   'Phonebook/fetchContactsRequest',\r\n// );\r\n// export const fetchContactsSuccess = createAction(\r\n//   'Phonebook/fetchContactsSuccess',\r\n// );\r\n// export const fetchContactsError = createAction('Phonebook/fetchContactsError');\r\n\r\n// export const addContactRequest = createAction('Phonebook/addContactRequest');\r\n// export const addContactSuccess = createAction('Phonebook/addContactSuccess');\r\n// export const addContactError = createAction('Phonebook/addContactError');\r\n\r\n// export const delContactRequest = createAction('Phonebook/delContactRequest');\r\n// export const delContactSuccess = createAction('Phonebook/delContactSuccess');\r\n// export const delContactError = createAction('Phonebook/delContactError');\r\n","import axios from 'axios';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n\r\naxios.defaults.baseURL =\r\n  'https://6191a09a41928b00176900d3.mockapi.io/phonebook';\r\n// axios.defaults.baseURL = 'http://localhost:4000';\r\n\r\nexport async function fetchContactsAPI() {\r\n  const { data } = await axios.get('/contacts');\r\n  return data;\r\n}\r\n\r\nexport async function addContactAPI(name, phone) {\r\n  // const newContact = { name, phone, id: uuidv4() };\r\n  const newContact = { name, phone };\r\n  const { data } = await axios.post('/contacts', newContact);\r\n  return data;\r\n}\r\n\r\nexport async function delContactAPI(contactId) {\r\n  await axios.delete(`/contacts/${contactId}`);\r\n  return contactId;\r\n}\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport * as actions from './actions';\r\nimport {\r\n  fetchContactsAPI,\r\n  addContactAPI,\r\n  delContactAPI,\r\n} from '../services/contacts-api';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  actions.fetchContacts,\r\n  async () => {\r\n    const contacts = await fetchContactsAPI();\r\n    return contacts;\r\n  },\r\n);\r\nexport const addContact = createAsyncThunk(actions.addContact, async data => {\r\n  const { name, phone } = data;\r\n  const contact = await addContactAPI(name, phone);\r\n  console.log(contact);\r\n  return contact;\r\n});\r\nexport const delContact = createAsyncThunk(actions.delContact, async id => {\r\n  const contact = await delContactAPI(id);\r\n  return contact;\r\n});\r\n\r\n// ========== oldschool ==========\r\n// export const fetchContacts = () => async dispatch => {\r\n//   dispatch(actions.fetchContactsRequest());\r\n\r\n//   try {\r\n//     const contacts = await fetchContactsAPI();\r\n//     dispatch(actions.fetchContactsSuccess(contacts));\r\n//   } catch (error) {\r\n//     dispatch(actions.fetchContactsError(error));\r\n//   }\r\n// };\r\n\r\n// export const addContact = (name, phone) => async dispatch => {\r\n//   dispatch(actions.addContactRequest());\r\n\r\n//   try {\r\n//     const contact = await addContactAPI(name, phone);\r\n//     dispatch(actions.addContactSuccess(contact));\r\n//   } catch (error) {\r\n//     dispatch(actions.addContactError(error));\r\n//   }\r\n// };\r\n\r\n// export const delContact = id => async dispatch => {\r\n//   dispatch(actions.delContactRequest());\r\n\r\n//   try {\r\n//     const contactId = await delContactAPI(id);\r\n//     dispatch(actions.delContactSuccess(contactId));\r\n//   } catch (error) {\r\n//     dispatch(actions.delContactError(error));\r\n//   }\r\n// };\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getEntities = state => state.contacts.entities;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getLoading = state => state.contacts.isLoading;\r\nexport const getVisibleContacts = createSelector(\r\n  [getEntities, getFilter],\r\n  (items, filter) =>\r\n    items.filter(item => item.name.toLowerCase().includes(filter)),\r\n);\r\n","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport s from './Form.module.css';\r\nimport * as operations from '../../redux/operations';\r\nimport { getEntities } from '../../redux/selectors';\r\n\r\nexport default function Form() {\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const items = useSelector(getEntities);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'phone':\r\n        setPhone(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    const isContactExist = items.filter(\r\n      item => item.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n    if (isContactExist.length === 0) {\r\n      dispatch(operations.addContact({ name, phone }));\r\n    } else {\r\n      alert(`${name} is already in contacts.`);\r\n    }\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setPhone('');\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={onSubmit}>\r\n      <label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Name\"\r\n          value={name}\r\n          onChange={onChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"phone\"\r\n          placeholder=\"Number\"\r\n          value={phone}\r\n          onChange={onChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <button className={s.form__btn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport s from '../Contacts/Contacts.module.css';\r\nimport * as operations from '../../redux/operations';\r\n\r\nexport default function ContactsItem({ id, name, phone }) {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <p>\r\n        {name}: {phone}\r\n      </p>\r\n      <button\r\n        className={s.del__btn}\r\n        type=\"button\"\r\n        onClick={() => dispatch(operations.delContact(id))}\r\n      >\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nContactsItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  phone: PropTypes.string.isRequired,\r\n};\r\n","import { useSelector } from 'react-redux';\r\nimport s from './Contacts.module.css';\r\nimport ContactsItem from '../ContactsItem/ContactsItem';\r\nimport { getVisibleContacts } from '../../redux/selectors';\r\n\r\nexport default function Contacts() {\r\n  const contacts = useSelector(getVisibleContacts);\r\n\r\n  return (\r\n    <ul className={s.contacts__list}>\r\n      {contacts.map(({ id, name, phone }) => (\r\n        <li key={id} className={s.contacts__item}>\r\n          <ContactsItem id={id} name={name} phone={phone} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport s from '../Contacts/Contacts.module.css';\r\nimport * as actions from '../../redux/actions';\r\nimport { getFilter } from '../../redux/selectors';\r\n\r\nexport default function ContactsSearch() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label className={s.wrapper}>\r\n      <input\r\n        placeholder=\"Find contacts by name\"\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={event =>\r\n          dispatch(actions.changeFilter(event.target.value.toLowerCase()))\r\n        }\r\n      />\r\n    </label>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport s from './Loader.module.css';\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div className={s.lds_wrapper}>\r\n      <div className={s.lds_default}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Section from './Section/Section';\nimport Form from './Form/Form';\nimport Contacts from './Contacts/Contacts';\nimport ContactsSearch from './ContactsSearch/ContactsSearch';\nimport Loader from './Loader/Loader';\nimport s from './Contacts/Contacts.module.css';\nimport { getEntities, getLoading } from '../redux/selectors';\nimport * as operations from '../redux/operations';\n\nexport default function Phonebook() {\n  const items = useSelector(getEntities);\n  const isLoading = useSelector(getLoading);\n  const dispatch = useDispatch();\n  useEffect(() => dispatch(operations.fetchContacts()), [dispatch]);\n\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <Form />\n      </Section>\n      <Section title=\"Contacts\">\n        {isLoading ? (\n          <Loader />\n        ) : items.length > 0 ? (\n          <>\n            {items.length > 1 && <ContactsSearch />}\n            <Contacts />\n          </>\n        ) : (\n          <div className={s.wrapper}>\n            <p className={s.text}>No contacts yet</p>\n          </div>\n        )}\n      </Section>\n    </>\n  );\n}\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport * as actions from './actions';\r\nimport { fetchContacts, addContact, delContact } from './operations';\r\n\r\nconst entities = createReducer([], {\r\n  [fetchContacts.fulfilled]: (_, action) => action.payload,\r\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\r\n  [delContact.fulfilled]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n  [fetchContacts.pending]: () => true,\r\n  [fetchContacts.fulfilled]: () => false,\r\n  [fetchContacts.rejected]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContacts.rejected]: (_, action) => action.payload,\r\n  [fetchContacts.pending]: () => null,\r\n  [addContact.rejected]: (_, action) => action.payload,\r\n  [addContact.pending]: () => null,\r\n  [delContact.rejected]: (_, action) => action.payload,\r\n  [delContact.pending]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n  entities,\r\n  isLoading,\r\n  filter,\r\n  error,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from './reducer';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport App from './components/App';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Contacts_wrapper__XSqRz\",\"contacts__list\":\"Contacts_contacts__list__2X1Qj\",\"contacts__item\":\"Contacts_contacts__item__cCGUk\",\"text\":\"Contacts_text__2Ghv_\",\"del__btn\":\"Contacts_del__btn__3dEve\"};"],"sourceRoot":""}